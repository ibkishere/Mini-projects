


body {
 padding:0;
 margin:0;
 box-sizing: border-box;
 font-family:Source Sans Pro ;
 display :flex;
 justify-content: center;
 width:100vw;
 height: 100vh;
 align-items:center;
 /* background: url(/1500x500banner.jpeg); */
 background-repeat: no-repeat;
 background-size: cover;
 background-position: 50%;
 z-index: 1;
}
.form_container {
        font-weight:300;
        border-top:35px solid rgb(57, 57, 241);
        background:white;
        border-radius:20px;
        box-shadow:0 5px 10px rgba(0, 0, 0, 0.01)
}

.form_login {
    height: 27em;
    width: 20em;
    
}
.gradient_overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    opacity: 0.6;
    z-index: -1;
    background: rgb(46,39,162);
    background: linear-gradient(90deg, rgba(46,39,162,1) 15%, rgba(0,212,255,1) 100%);
}
.form_title_container {
    width: 100%;
    border-bottom: 2px black solid;
}
.form_title {
font-size:2em ;
}
.req_field {
 color:red;
}

form {
    padding : 50px
}
.details {
    padding-bottom:20px;
}
  .form_input {
    width:97.5%;
    outline:none;
    border: 1px solid #dddddd;
    border-radius:4px;
    height: 30px;
    outline:none;
    background:#e9e9e9;
}
.textarea_field:focus, .input-field input:focus {
background: white;
}
 
.form_title_container, .form_login {
    display : flex;
    flex-direction: column;
    justify-content: space-evenly;
    flex-wrap:wrap;
}
.textarea_field {
    height : 80px;
    outline:none;-
    border: 1px solid #dddddd;
    border-radius:4px;
    background:#e9e9e9;
}
.form_input_error  {
   color:#d50000;
   background:#fff8f8;
   border-color:#d50000;
} 
   .form_input_error::placeholder {
    color:#ffbfbf;
}                          

.form_error {
    font-size:0.9em;
    color:red;
    visibility: hidden;
}

.form_input_error + .form_error {
    visibility: visible;
}

.button input {
    opacity :0.8;
    color:white;
    width:100%;
    height:30px;
    border: 1px solid #dddddd;
    border-radius:4px;
    background: rgb(57, 57, 241);
    cursor : pointer;
    
}

.button input:focus {
    background: rgb(0, 0, 218);
}
.bottom_warning {
    font-size: 8px;
}
@media screen and (max-width:540px) {
    .form_login {
        width: 12.35em;
    }
}

 /* The + combinator matches the second element only if it immediately follows the first element.
   Syntax: A + B you want to target the next sibling with the class that is we are going to make the .form_error visible only when the .form_input_error exists
   Example: h2 + p will match all <p> elements that immediately follows <h2> element. */
   /* We only want the error message (.form_input_error) to appear visible when the .form_input has an error*/
    
